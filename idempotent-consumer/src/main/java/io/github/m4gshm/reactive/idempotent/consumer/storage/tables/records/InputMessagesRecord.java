/*
 * This file is generated by jOOQ.
 */
package io.github.m4gshm.reactive.idempotent.consumer.storage.tables.records;


import io.github.m4gshm.reactive.idempotent.consumer.storage.tables.InputMessages;

import java.time.OffsetDateTime;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InputMessagesRecord extends UpdatableRecordImpl<InputMessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>input_messages.message_id</code>.
     */
    public void setMessageId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>input_messages.message_id</code>.
     */
    public String getMessageId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>input_messages.subscriber_id</code>.
     */
    public void setSubscriberId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>input_messages.subscriber_id</code>.
     */
    public String getSubscriberId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>input_messages.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>input_messages.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InputMessagesRecord
     */
    public InputMessagesRecord() {
        super(InputMessages.INPUT_MESSAGES);
    }

    /**
     * Create a detached, initialised InputMessagesRecord
     */
    public InputMessagesRecord(String messageId, String subscriberId, OffsetDateTime createdAt) {
        super(InputMessages.INPUT_MESSAGES);

        setMessageId(messageId);
        setSubscriberId(subscriberId);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
