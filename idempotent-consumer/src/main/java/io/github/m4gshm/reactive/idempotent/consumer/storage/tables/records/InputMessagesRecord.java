/*
 * This file is generated by jOOQ.
 */
package io.github.m4gshm.reactive.idempotent.consumer.storage.tables.records;


import io.github.m4gshm.reactive.idempotent.consumer.storage.tables.InputMessages;

import java.time.LocalDate;
import java.time.OffsetDateTime;

import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InputMessagesRecord extends UpdatableRecordImpl<InputMessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>input_messages.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>input_messages.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>input_messages.subscriber_id</code>.
     */
    public void setSubscriberId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>input_messages.subscriber_id</code>.
     */
    public String getSubscriberId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>input_messages.partition_id</code>.
     */
    public void setPartitionId(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>input_messages.partition_id</code>.
     */
    public LocalDate getPartitionId() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>input_messages.event_timestamp</code>.
     */
    public void setEventTimestamp(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>input_messages.event_timestamp</code>.
     */
    public OffsetDateTime getEventTimestamp() {
        return (OffsetDateTime) get(3);
    }

    /**
     * Setter for <code>input_messages.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>input_messages.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<LocalDate, String, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InputMessagesRecord
     */
    public InputMessagesRecord() {
        super(InputMessages.INPUT_MESSAGES);
    }

    /**
     * Create a detached, initialised InputMessagesRecord
     */
    public InputMessagesRecord(String id, String subscriberId, LocalDate partitionId, OffsetDateTime eventTimestamp, OffsetDateTime createdAt) {
        super(InputMessages.INPUT_MESSAGES);

        setId(id);
        setSubscriberId(subscriberId);
        setPartitionId(partitionId);
        setEventTimestamp(eventTimestamp);
        setCreatedAt(createdAt);
        resetTouchedOnNotNull();
    }
}
